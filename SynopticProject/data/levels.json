{
  "levels":[
    {
	"levelInfo": "The Input block will take the next value in the input array and store it for use. \n The Output block will take the stored value and place it into the final output array. \n Use these blocks to solve the problem!",
      "levelInput": [
        1
      ],
      "levelExpectedOutput":[
        1
      ],
      "levelLocked": "false",
      "availableCodeBlocks":[],
      "minimumIfsUsed": 0,
      "minimumLoopsUsed": 0
    },
    {
      "levelInfo": "The Input and Output blocks can be used multiple times, try it now to solve the problem!",
      "levelInput": [
		1,
		2,
		3
      ],
      "levelExpectedOutput":[
		1,
		2,
		3
      ],
      "levelLocked": "true",
      "availableCodeBlocks":[],
      "minimumIfsUsed": 0,
      "minimumLoopsUsed": 0
    },
    {
      "levelInfo": "If statements can be used to compare two values together \n Here you will select a number between 1-9 to compare to the stored value \n Make sure to close your if blocks using the button in the top right \n Give it a go!",
      "levelInput": [
        5,
        7,
        5,
      ],
      "levelExpectedOutput":[
        5,
        5
      ],
      "levelLocked": "true",
      "availableCodeBlocks":[
        "If"
      ],
      "minimumIfsUsed": 3,
      "minimumLoopsUsed": 0
    },
    {
      "levelInfo": "Loops can be used to run a section of a function multiple times \n Here you will select a number betwen 1-9 to choose how many times the loop will run \n Make sure to close your loop blocks using the button in the top right\n Give it a go!",
      "levelInput": [
        2,
        2,
        2,
        2,
        2
      ],
      "levelExpectedOutput":[
        2,
        2,
        2
      ],
      "levelLocked": "true",
      "availableCodeBlocks": [
        "Loop"
      ],
      "minimumIfsUsed": 0,
      "minimumLoopsUsed": 1
    },
    {
      "levelInfo": "Combine the use of loops and if statements to solve this problem!",
      "levelInput": [
        3,
        9,
        4,
        6,
        3,
        3,
        8
      ],
      "levelExpectedOutput":[
        3,
        3,
        3
      ],
      "levelLocked": "true",
      "availableCodeBlocks": [
        "If",
        "Loop"
      ],
      "minimumIfsUsed": 1,
      "minimumLoopsUsed": 1
    }
  ]
}